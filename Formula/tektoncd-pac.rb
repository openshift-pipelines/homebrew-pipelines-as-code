# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class TektoncdPac < Formula
  desc "Tekton PAC - The command line interface for interacting with Pipelines as Code"
  homepage "https://github.com/openshift-pipelines/pipelines-as-code"
  version "0.5.2"

  on_macos do
    url "https://github.com/openshift-pipelines/pipelines-as-code/releases/download/0.5.2/tkn-pac_0.5.2_MacOS_all.tar.gz"
    sha256 "dc63dc7c6e243740b9012e82f94a8c5310e48c3f6e7184b163e64ea74c2ef62c"

    def install
      bin.install "tkn-pac" => "tkn-pac"
      output = Utils.popen_read("SHELL=bash #{bin}/tkn-pac completion bash")
      (bash_completion/"tkn-pac").write output
      output = Utils.popen_read("SHELL=zsh #{bin}/tkn-pac completion zsh")
      (zsh_completion/"_tkn-pac").write output
      prefix.install_metafiles
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/openshift-pipelines/pipelines-as-code/releases/download/0.5.2/tkn-pac_0.5.2_Linux_arm64.tar.gz"
      sha256 "cf5f4dd4e7550a70c13bbe62b5b9ee659b0b9f5649c6f966c16dd61e0f9faa7e"

      def install
        bin.install "tkn-pac" => "tkn-pac"
        output = Utils.popen_read("SHELL=bash #{bin}/tkn-pac completion bash")
        (bash_completion/"tkn-pac").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/tkn-pac completion zsh")
        (zsh_completion/"_tkn-pac").write output
        prefix.install_metafiles
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/openshift-pipelines/pipelines-as-code/releases/download/0.5.2/tkn-pac_0.5.2_Linux_x86_64.tar.gz"
      sha256 "30eef92aa09f4f12def74048f38f46eba598443d48649fda5ac7a69d3cb592ad"

      def install
        bin.install "tkn-pac" => "tkn-pac"
        output = Utils.popen_read("SHELL=bash #{bin}/tkn-pac completion bash")
        (bash_completion/"tkn-pac").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/tkn-pac completion zsh")
        (zsh_completion/"_tkn-pac").write output
        prefix.install_metafiles
      end
    end
  end

  depends_on "tektoncd-cli" => :optional
  depends_on "git"
end
